Index: src/it/it-compare-dependencies-002/invoker.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/it/it-compare-dependencies-002/invoker.properties	(revision 19377)
+++ src/it/it-compare-dependencies-002/invoker.properties	(revision 19377)
@@ -0,0 +1,2 @@
+invoker.goals=${project.groupId}:${project.artifactId}:${project.version}:compare-dependencies
+invoker.systemPropertiesFile = test.properties
Index: src/it/it-compare-dependencies-002/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/it/it-compare-dependencies-002/pom.xml	(revision 19377)
+++ src/it/it-compare-dependencies-002/pom.xml	(revision 19377)
@@ -0,0 +1,33 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+
+  <groupId>localhost</groupId>
+  <artifactId>it-compare-dependencies-002</artifactId>
+  <version>1.0</version>
+  <packaging>pom</packaging>
+  <name>compare dependency versions</name>
+
+  <properties>
+    <junit.version>4.8</junit.version>
+    <another.property>1</another.property>
+  </properties>
+
+  <dependencyManagement>
+    <dependencies>
+
+      <dependency>
+        <groupId>org.apache.maven</groupId>
+        <artifactId>maven-artifact</artifactId>
+        <version>2.0.10</version>
+      </dependency>
+      <dependency>
+        <groupId>junit</groupId>
+        <artifactId>junit</artifactId>
+        <version>${junit.version}</version>
+      </dependency>
+
+    </dependencies>
+  </dependencyManagement>
+
+</project>
Index: src/it/it-compare-dependencies-002/test.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/it/it-compare-dependencies-002/test.properties	(revision 19377)
+++ src/it/it-compare-dependencies-002/test.properties	(revision 19377)
@@ -0,0 +1,3 @@
+remotePom=localhost:dummy-bom-pom:1.0
+reportMode=false
+updatePropertyVersions=true
\ No newline at end of file
Index: src/it/it-compare-dependencies-003/invoker.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/it/it-compare-dependencies-003/invoker.properties	(revision 19377)
+++ src/it/it-compare-dependencies-003/invoker.properties	(revision 19377)
@@ -0,0 +1,2 @@
+invoker.goals=${project.groupId}:${project.artifactId}:${project.version}:compare-dependencies
+invoker.systemPropertiesFile = test.properties
Index: src/it/it-compare-dependencies-003/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/it/it-compare-dependencies-003/pom.xml	(revision 19377)
+++ src/it/it-compare-dependencies-003/pom.xml	(revision 19377)
@@ -0,0 +1,33 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+
+  <groupId>localhost</groupId>
+  <artifactId>it-compare-dependencies-003</artifactId>
+  <version>1.0</version>
+  <packaging>pom</packaging>
+  <name>compare dependency versions</name>
+
+  <properties>
+    <maven.version>2.0.10</maven.version>
+  </properties>
+
+  <dependencyManagement>
+    <dependencies>
+
+      <dependency>
+        <groupId>org.apache.maven</groupId>
+        <artifactId>maven-artifact</artifactId>
+        <version>${maven.version}</version>
+      </dependency>
+      <dependency>
+        <groupId>org.apache.maven</groupId>
+        <artifactId>maven-model</artifactId>
+        <version>${maven.version}</version>
+      </dependency>
+
+
+    </dependencies>
+  </dependencyManagement>
+
+</project>
Index: src/it/it-compare-dependencies-003/test.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/it/it-compare-dependencies-003/test.properties	(revision 19377)
+++ src/it/it-compare-dependencies-003/test.properties	(revision 19377)
@@ -0,0 +1,3 @@
+remotePom=localhost:dummy-bom-maven-mismatch:1.0
+reportMode=false
+updatePropertyVersions=true
\ No newline at end of file
Index: src/it-repo/dummy-bom-maven-mismatch-1.0.pom
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/it-repo/dummy-bom-maven-mismatch-1.0.pom	(revision 19377)
+++ src/it-repo/dummy-bom-maven-mismatch-1.0.pom	(revision 19377)
@@ -0,0 +1,25 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+
+  <groupId>localhost</groupId>
+  <artifactId>dummy-bom-maven-mismatch</artifactId>
+  <version>1.0</version>
+  <packaging>pom</packaging>
+
+  <dependencyManagement>
+    <dependencies>
+      <dependency>
+        <groupId>org.apache.maven</groupId>
+        <artifactId>maven-artifact</artifactId>
+        <version>2.0.9</version>
+      </dependency>
+      <dependency>
+        <groupId>org.apache.maven</groupId>
+        <artifactId>maven-model</artifactId>
+        <version>2.0.8</version>
+      </dependency>
+    </dependencies>
+  </dependencyManagement>
+
+</project>
Index: src/main/java/org/codehaus/mojo/versions/CompareDependenciesMojo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/org/codehaus/mojo/versions/CompareDependenciesMojo.java	(revision 19376)
+++ src/main/java/org/codehaus/mojo/versions/CompareDependenciesMojo.java	(revision 19377)
@@ -26,7 +26,9 @@
 import org.apache.maven.project.MavenProject;
 import org.apache.maven.project.MavenProjectBuilder;
 import org.apache.maven.project.ProjectBuildingException;
+import org.codehaus.mojo.versions.api.ArtifactAssociation;
 import org.codehaus.mojo.versions.api.PomHelper;
+import org.codehaus.mojo.versions.api.PropertyVersions;
 import org.codehaus.mojo.versions.rewriting.ModifiedPomXMLEventReader;
 
 import javax.xml.stream.XMLStreamException;
@@ -197,6 +199,12 @@
             List<String> depDiffs = compareVersions( pom, getProject().getDependencies(), remoteDepsMap );
             totalDiffs.addAll( depDiffs );
         }
+        if ( !reportMode && updatePropertyVersions )
+        {
+            Map<Property, PropertyVersions> versionProperties =
+                this.getHelper().getVersionPropertiesMap( getProject(), null, null, null, true );
+            updatePropertyVersions( pom, versionProperties, remoteDepsMap );
+        }
 
         if ( reportMode )
         {
@@ -259,6 +267,73 @@
 
     }
 
+
+    /**
+     * Updates the properties holding a version if necessary.
+     */
+    private void updatePropertyVersions( ModifiedPomXMLEventReader pom,
+                                         Map<Property, PropertyVersions> versionProperties,
+                                         Map<String, Dependency> remoteDependencies )
+        throws XMLStreamException
+    {
+        for ( Map.Entry<Property, PropertyVersions> entry : versionProperties.entrySet() )
+        {
+            Property property = entry.getKey();
+            PropertyVersions version = entry.getValue();
+
+            String candidateVersion = computeCandidateVersion( remoteDependencies, property, version );
+
+            if ( candidateVersion != null && PomHelper.setPropertyVersion( pom, null, property.getName(),
+                                                                           candidateVersion ) )
+            {
+                getLog().info( "Updated ${" + property.getName() + "} to " + candidateVersion );
+            }
+        }
+
+    }
+
+    /**
+     * Returns the candidate version to use for the specified property.
+     * <p/>
+     * The dependencies currently linked to the property must all be defined by the remote
+     * POM and they should refer to the same version. If that's the case, that same version
+     * is returned. Otherwise, <tt>null</tt> is returned indicating that there is no
+     * candidate.
+     *
+     * @param remoteDependencies the remote dependencies
+     * @param property           the property to update
+     * @param propertyVersions   the association
+     * @return the candidate version or <tt>null</tt> if there isn't any
+     */
+    private String computeCandidateVersion( Map<String, Dependency> remoteDependencies, Property property,
+                                            PropertyVersions propertyVersions )
+    {
+        String candidateVersion = null;
+        for ( ArtifactAssociation artifactAssociation : propertyVersions.getAssociations() )
+        {
+            String id = generateId( artifactAssociation.getArtifact() );
+            Dependency dependency = remoteDependencies.get( id );
+            if ( dependency == null )
+            {
+                getLog().warn( "Could not update ${" + property.getName() + "}: unknown dependency " + id );
+                return null;
+            }
+            else
+            {
+                if ( candidateVersion == null )
+                {
+                    candidateVersion = dependency.getVersion();
+                }
+                else if ( !candidateVersion.equals( dependency.getVersion() ) )
+                {
+                    getLog().warn( "Could not update ${" + property.getName() + "}: version mismatch" );
+                    return null;
+                }
+            }
+        }
+        return candidateVersion;
+    }
+
     private void writeReportFile( List<String> updates )
         throws MojoExecutionException
     {
@@ -348,4 +423,21 @@
             }
         }
     }
+
+    /**
+     * Creates a key that is similar to what {@link Dependency#getManagementKey()} generates
+     * for a dependency.
+     */
+    private static String generateId( Artifact artifact )
+    {
+        StringBuilder sb = new StringBuilder();
+        sb.append( artifact.getGroupId() ).append( ":" ).append( artifact.getArtifactId() ).append( ":" ).append(
+            artifact.getType() );
+        if ( artifact.getClassifier() != null )
+        {
+            sb.append( ":" ).append( artifact.getClassifier() );
+        }
+        return sb.toString();
+    }
+
 }
\ No newline at end of file
